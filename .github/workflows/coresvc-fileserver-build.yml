name: coresvc-fileserver-build

on: 
    workflow_dispatch:
    push:
        branches:
        - km/add_action

env:
  REGISTRY: ghcr.io
  APP_NAME: coresvc-fileserver
  ANNOTATION: azure-orbital-space-sdk-coresvc-fileserver.yaml

jobs:
  build-publish-coresvc-fileserver-amd64:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v2

    - uses: microsoft/azure-orbital-space-sdk-github-actions/composite-actions/registry-login@km/add_dev-container
      with:
        registry-name: ${{ env.REGISTRY}}
        github-user-name: ${{ secrets.GIT_HUB_USER_NAME }}
        github-user-token: ${{ secrets.GIT_HUB_USER_TOKEN }}

    - uses: microsoft/azure-orbital-space-sdk-github-actions/composite-actions/get-setup@km/add_dev-container
      with: 
        setup-repo-url: ${{ secrets.SETUP_REPO_URL }}

    - uses: microsoft/azure-orbital-space-sdk-github-actions/composite-actions/run-build-container-image@km/add_dev-container
      with: 
        dockerfile: Dockerfiles/Dockerfile
        architecture: amd64
        repo-dir: ${{ github.workspace }}
        app-name: ${{ env.APP_NAME }}
        annotation-config: ${{ env.ANNOTATION }}

    # - name: Build amd64 container image
    #   shell: bash
    #   run: |
    #     source /var/spacedev/env/spacefx.env
    #     echo "Running build_containerImage.sh script:"
    #     bash /var/spacedev/build/build_containerImage.sh --dockerfile Dockerfiles/Dockerfile --image-tag $SPACEFX_VERSION --architecture amd64 --repo-dir ${PWD} --app-name ${{ env.APP_NAME }} --annotation-config ${{ env.ANNOTATION}}

  build-publish-coresvc-fileserver-arm64:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v2

    - uses: microsoft/azure-orbital-space-sdk-github-actions/composite-actions/registry-login@km/add_dev-container
      with:
        registry-name: ${{ env.REGISTRY}}
        github-user-name: ${{ secrets.GIT_HUB_USER_NAME }}
        github-user-token: ${{ secrets.GIT_HUB_USER_TOKEN }}

    - uses: microsoft/azure-orbital-space-sdk-github-actions/composite-actions/get-setup@km/add_dev-container
      with: 
        setup-repo-url: ${{ secrets.SETUP_REPO_URL }}

    # - name: Build arm64 container image
    #   shell: bash
    #   run: |
    #     source /var/spacedev/env/spacefx.env  
    #     echo "Running build_containerImage.sh script:"
    #     bash /var/spacedev/build/build_containerImage.sh --dockerfile Dockerfiles/Dockerfile --image-tag $SPACEFX_VERSION --architecture arm64 --repo-dir ${PWD} --app-name ${{ env.APP_NAME }} --annotation-config ${{ env.ANNOTATION}}

    - uses: microsoft/azure-orbital-space-sdk-github-actions/composite-actions/run-build-container-image@km/add_dev-container
      with: 
        dockerfile: Dockerfiles/Dockerfile
        architecture: arm64
        repo-dir: ${{ github.workspace }}
        app-name: ${{ env.APP_NAME }}
        annotation-config: ${{ env.ANNOTATION }}